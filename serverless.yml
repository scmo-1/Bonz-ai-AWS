plugins:
  - serverless-dotenv-plugin

# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: ${env:ORG}
# "service" is the name of this project. This will also be added to your AWS resource names.
service: bonzAi

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  iam:
    role: ${env:IAM}

# FUNCTIONS

functions:
  adminBooking:
    handler: functions/adminBooking/index.handler
    description: BonzAi - Fetch all bookings
    events:
      - httpApi:
          path: /api/admin/bookings
          method: get

  newBooking:
    handler: functions/newBooking/index.handler
    description: BonzAi - Create new booking
    events:
      - httpApi:
          path: /api/booking
          method: post

  changeBooking:
    handler: functions/changeBooking/index.handler
    description: BonzAi - Edit booking by bookingID
    events:
      - httpApi:
          path: /api/booking/{bookingId}
          method: put

#delete booking - added cors to avoid insomnia/postman issues

  deleteBooking:
    handler: functions/deleteBooking/index.handler
    description: BonzAi - Delete booking by bookingID
    events:
      - httpApi:
          path: /api/booking/{bookingId}
          method: delete
          cors: true

# DATABASE

resources:
  Resources:
    bonzAiTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: bonzAiTable
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
